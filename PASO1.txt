VIDEOTUTORIAL: https://www.youtube.com/watch?v=UEjf7k32mTg 
node -v (Versión de Node.js)
npm init -yes (Inicialización del proyecto)
npm i cors dotenv express promise-mysql (Dependencias de producción)
npm i nodemon morgan --save-dev (Dependencias de desarrollo)
file[.gitignore] > node_modules (Excluir restos de librerías Node.js del directorio de trabajo en Git)
dir[src] > file[app.js] (Crear Archivo principal de aplicaciones)

package.json > "type": "module",
"main": "index.js", >> "app.js",
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1" >> "dev": "nodemon src/app.js",
                                                             "start": "node src/app.js"
},

app.js > import express from 'express'...
Thunder Client (Ctrl+Mayús+R) > New Request | GET | localhost:4000 | Send (Testeo de APIs)

PostgreSQL > CREATE DATABASE db; (Creación de bases de datos)
CREATE TABLE users (
    uid SERIAL PRIMARY KEY,
    username VARCHAR(250) UNIQUE NOT NULL,
    email VARCHAR(500) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE products (
    pid SERIAL PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    quantity INT DEFAULT 0,
    image VARCHAR(100),
    deleted TINYINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

src > dir[database] > file[connection.database.js] (Crear Archivo de conexión entre el server y el database)
connection.database.js > import pg from 'pg'...
file[.env] > host = "abc",... (Crear Archivo de variables de entorno)
.gitignore > .env (Excluir datos seguros del directorio de trabajo en Git)


